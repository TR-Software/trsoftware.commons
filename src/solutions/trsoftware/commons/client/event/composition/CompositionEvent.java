/*
 * Copyright 2022 TR Software Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

package solutions.trsoftware.commons.client.event.composition;

import com.google.common.base.MoreObjects;
import com.google.gwt.event.dom.client.DomEvent;
import com.google.gwt.event.shared.EventHandler;
import solutions.trsoftware.commons.client.jso.JsObject;

import static solutions.trsoftware.commons.shared.util.StringUtils.valueToString;

/**
 * Base class for {@link CompositionStartEvent compositionstart}, {@link CompositionUpdateEvent compositionupdate},
 * and {@link CompositionEndEvent compositionend} events.
 *
 * Provides an implementation of the native {@code CompositionEvent} API.
 *
 * @see <a href="https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent">CompositionEvent on MDN</a>
 * @see <a href="https://w3c.github.io/uievents/#events-compositionevents">W3C spec for composition events</a>
 */
public abstract class CompositionEvent<H extends EventHandler> extends DomEvent<H> {

  /**
   * Returns the characters generated by the input method that raised the event;
   * its exact nature varies depending on the type of event.
   *
   * @return the {@code data} property of this {@code CompositionEvent}
   * @see <a href="https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/data">MDN Reference</a>
   * @see <a href="https://w3c.github.io/uievents/#dom-compositionevent-data">W3C spec</a>
   */
  public String getData() {
    return JsObject.as(getNativeEvent()).getString("data");
  }

  @Override
  public String toDebugString() {
    return MoreObjects.toStringHelper(this)
        .add("type", valueToString(getNativeEvent().getType()))
        .add("data", valueToString(getData()))
        .toString();
  }
}
