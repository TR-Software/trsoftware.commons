/*
 * Copyright 2018 TR Software Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *
 */

package solutions.trsoftware.commons.client.images.flags;

import com.google.gwt.core.shared.GWT;
import com.google.gwt.user.client.ui.AbstractImagePrototype;
import com.google.gwt.user.client.ui.ImageBundle;

import java.util.HashMap;
import java.util.Map;

// NOTE: more flag image sources are listed at http://ip-to-country.webhosting.info/node/view/91 (for flags of different sizes, etc)

// TODO: might want to start using https://github.com/lipis/flag-icon-css instead since the original site from which these .gif images were downloaded has disappeared and we don't have a complete set of flags

/** Generated by com.typeracer.tools.gwt.ImageBundleCodeGenerator on Fri Nov 06 15:44:01 EST 2009 */
public interface CountryFlagsBundle extends ImageBundle {

  CountryFlagsBundle instance = GWT.create(CountryFlagsBundle.class);

  AbstractImagePrototype ad();
  AbstractImagePrototype ae();
  AbstractImagePrototype af();
  AbstractImagePrototype ag();
  AbstractImagePrototype ai();
  AbstractImagePrototype al();
  AbstractImagePrototype am();
  AbstractImagePrototype an();
  AbstractImagePrototype ao();
  AbstractImagePrototype aq();
  AbstractImagePrototype ar();
  AbstractImagePrototype as();
  AbstractImagePrototype at();
  AbstractImagePrototype au();
  AbstractImagePrototype aw();
  AbstractImagePrototype ax();
  AbstractImagePrototype az();
  AbstractImagePrototype ba();
  AbstractImagePrototype bb();
  AbstractImagePrototype bd();
  AbstractImagePrototype be();
  AbstractImagePrototype bf();
  AbstractImagePrototype bg();
  AbstractImagePrototype bh();
  AbstractImagePrototype bi();
  AbstractImagePrototype bj();
  AbstractImagePrototype bm();
  AbstractImagePrototype bn();
  AbstractImagePrototype bo();
  AbstractImagePrototype br();
  AbstractImagePrototype bs();
  AbstractImagePrototype bt();
  AbstractImagePrototype bv();
  AbstractImagePrototype bw();
  AbstractImagePrototype by();
  AbstractImagePrototype bz();
  AbstractImagePrototype ca();
  AbstractImagePrototype cc();
  AbstractImagePrototype cd();
  AbstractImagePrototype cf();
  AbstractImagePrototype cg();
  AbstractImagePrototype ch();
  AbstractImagePrototype ci();
  AbstractImagePrototype ck();
  AbstractImagePrototype cl();
  AbstractImagePrototype cm();
  AbstractImagePrototype cn();
  AbstractImagePrototype co();
  AbstractImagePrototype cr();
  AbstractImagePrototype cu();
  AbstractImagePrototype cv();
  AbstractImagePrototype cx();
  AbstractImagePrototype cy();
  AbstractImagePrototype cz();
  AbstractImagePrototype de();
  AbstractImagePrototype dj();
  AbstractImagePrototype dk();
  AbstractImagePrototype dm();
  @ImageBundle.Resource("do.gif")
  AbstractImagePrototype _do();
  AbstractImagePrototype dz();
  AbstractImagePrototype ec();
  AbstractImagePrototype ee();
  AbstractImagePrototype eg();
  AbstractImagePrototype eh();
  AbstractImagePrototype er();
  AbstractImagePrototype es();
  AbstractImagePrototype et();
  AbstractImagePrototype eu();
  AbstractImagePrototype fi();
  AbstractImagePrototype fj();
  AbstractImagePrototype fk();
  AbstractImagePrototype fm();
  AbstractImagePrototype fo();
  AbstractImagePrototype fr();
  AbstractImagePrototype ga();
  AbstractImagePrototype gb();
  AbstractImagePrototype gd();
  AbstractImagePrototype ge();
  AbstractImagePrototype gf();
  AbstractImagePrototype gh();
  AbstractImagePrototype gi();
  AbstractImagePrototype gl();
  AbstractImagePrototype gm();
  AbstractImagePrototype gn();
  AbstractImagePrototype gp();
  AbstractImagePrototype gq();
  AbstractImagePrototype gr();
  AbstractImagePrototype gs();
  AbstractImagePrototype gt();
  AbstractImagePrototype gu();
  AbstractImagePrototype gw();
  AbstractImagePrototype gy();
  AbstractImagePrototype hk();
  AbstractImagePrototype hm();
  AbstractImagePrototype hn();
  AbstractImagePrototype hr();
  AbstractImagePrototype ht();
  AbstractImagePrototype hu();
  AbstractImagePrototype id();
  AbstractImagePrototype ie();
  AbstractImagePrototype il();
  AbstractImagePrototype in();
  AbstractImagePrototype io();
  AbstractImagePrototype iq();
  AbstractImagePrototype ir();
  AbstractImagePrototype is();
  AbstractImagePrototype it();
  AbstractImagePrototype jm();
  AbstractImagePrototype jo();
  AbstractImagePrototype jp();
  AbstractImagePrototype ke();
  AbstractImagePrototype kg();
  AbstractImagePrototype kh();
  AbstractImagePrototype ki();
  AbstractImagePrototype km();
  AbstractImagePrototype kn();
  AbstractImagePrototype kp();
  AbstractImagePrototype kr();
  AbstractImagePrototype kw();
  AbstractImagePrototype ky();
  AbstractImagePrototype kz();
  AbstractImagePrototype la();
  AbstractImagePrototype lb();
  AbstractImagePrototype lc();
  AbstractImagePrototype li();
  AbstractImagePrototype lk();
  AbstractImagePrototype lr();
  AbstractImagePrototype ls();
  AbstractImagePrototype lt();
  AbstractImagePrototype lu();
  AbstractImagePrototype lv();
  AbstractImagePrototype ly();
  AbstractImagePrototype ma();
  AbstractImagePrototype mc();
  AbstractImagePrototype md();
  AbstractImagePrototype me();
  AbstractImagePrototype mg();
  AbstractImagePrototype mh();
  AbstractImagePrototype mk();
  AbstractImagePrototype ml();
  AbstractImagePrototype mm();
  AbstractImagePrototype mn();
  AbstractImagePrototype mo();
  AbstractImagePrototype mp();
  AbstractImagePrototype mq();
  AbstractImagePrototype mr();
  AbstractImagePrototype ms();
  AbstractImagePrototype mt();
  AbstractImagePrototype mu();
  AbstractImagePrototype mv();
  AbstractImagePrototype mw();
  AbstractImagePrototype mx();
  AbstractImagePrototype my();
  AbstractImagePrototype mz();
  AbstractImagePrototype na();
  AbstractImagePrototype nc();
  AbstractImagePrototype ne();
  AbstractImagePrototype nf();
  AbstractImagePrototype ng();
  AbstractImagePrototype ni();
  AbstractImagePrototype nl();
  AbstractImagePrototype no();
  AbstractImagePrototype np();
  AbstractImagePrototype nr();
  AbstractImagePrototype nu();
  AbstractImagePrototype nz();
  AbstractImagePrototype om();
  AbstractImagePrototype pa();
  AbstractImagePrototype pe();
  AbstractImagePrototype pf();
  AbstractImagePrototype pg();
  AbstractImagePrototype ph();
  AbstractImagePrototype pk();
  AbstractImagePrototype pl();
  AbstractImagePrototype pm();
  AbstractImagePrototype pn();
  AbstractImagePrototype pr();
  AbstractImagePrototype ps();
  AbstractImagePrototype pt();
  AbstractImagePrototype pw();
  AbstractImagePrototype py();
  AbstractImagePrototype qa();
  AbstractImagePrototype re();
  AbstractImagePrototype ro();
  AbstractImagePrototype rs();
  AbstractImagePrototype ru();
  AbstractImagePrototype rw();
  AbstractImagePrototype sa();
  AbstractImagePrototype sb();
  AbstractImagePrototype sc();
  AbstractImagePrototype sd();
  AbstractImagePrototype se();
  AbstractImagePrototype sg();
  AbstractImagePrototype sh();
  AbstractImagePrototype si();
  AbstractImagePrototype sj();
  AbstractImagePrototype sk();
  AbstractImagePrototype sl();
  AbstractImagePrototype sm();
  AbstractImagePrototype sn();
  AbstractImagePrototype so();
  AbstractImagePrototype sr();
  AbstractImagePrototype st();
  AbstractImagePrototype sv();
  AbstractImagePrototype sy();
  AbstractImagePrototype sz();
  AbstractImagePrototype tc();
  AbstractImagePrototype td();
  AbstractImagePrototype tf();
  AbstractImagePrototype tg();
  AbstractImagePrototype th();
  AbstractImagePrototype tj();
  AbstractImagePrototype tk();
  AbstractImagePrototype tl();
  AbstractImagePrototype tm();
  AbstractImagePrototype tn();
  AbstractImagePrototype to();
  AbstractImagePrototype tr();
  AbstractImagePrototype tt();
  AbstractImagePrototype tv();
  AbstractImagePrototype tw();
  AbstractImagePrototype tz();
  AbstractImagePrototype ua();
  AbstractImagePrototype ug();
  AbstractImagePrototype um();
  AbstractImagePrototype us();
  AbstractImagePrototype uy();
  AbstractImagePrototype uz();
  AbstractImagePrototype va();
  AbstractImagePrototype vc();
  AbstractImagePrototype ve();
  AbstractImagePrototype vg();
  AbstractImagePrototype vi();
  AbstractImagePrototype vn();
  AbstractImagePrototype vu();
  AbstractImagePrototype wf();
  AbstractImagePrototype ws();
  AbstractImagePrototype ye();
  AbstractImagePrototype yt();
  AbstractImagePrototype za();
  AbstractImagePrototype zm();
  AbstractImagePrototype zw();

  // NOTE: I made up the code "ct" for Catalonia to support the Catalan language - in reality there is no ISO code for it ("There is no separate ISO 3166-1 code for Catalonia. It is part of the Kingdom of Spain and its codes ES, ESP and 724 apply to Catalonia, too.")
  // NOTE(2): CountryFlagsBundle.Lookup.getByName(language.getMainCountry("ct") won't work because "ct" isn't part of that lookup table
  AbstractImagePrototype ct();

  /** A transparent image the same size as the other flags */
  AbstractImagePrototype clear();

  /**
   * Generated by com.typeracer.tools.gwt.ImageBundleMethodLookupGenerator on
   * Mon Apr 01 02:29:22 EDT 2013
   */
  final class Lookup {
    private static Map<String, AbstractImagePrototype> lookupMap = new HashMap<String, AbstractImagePrototype>();

    static {
      lookupMap.put("ad", instance.ad());
      lookupMap.put("ae", instance.ae());
      lookupMap.put("af", instance.af());
      lookupMap.put("ag", instance.ag());
      lookupMap.put("ai", instance.ai());
      lookupMap.put("al", instance.al());
      lookupMap.put("am", instance.am());
      lookupMap.put("an", instance.an());
      lookupMap.put("ao", instance.ao());
      lookupMap.put("aq", instance.aq());
      lookupMap.put("ar", instance.ar());
      lookupMap.put("as", instance.as());
      lookupMap.put("at", instance.at());
      lookupMap.put("au", instance.au());
      lookupMap.put("aw", instance.aw());
      lookupMap.put("ax", instance.ax());
      lookupMap.put("az", instance.az());
      lookupMap.put("ba", instance.ba());
      lookupMap.put("bb", instance.bb());
      lookupMap.put("bd", instance.bd());
      lookupMap.put("be", instance.be());
      lookupMap.put("bf", instance.bf());
      lookupMap.put("bg", instance.bg());
      lookupMap.put("bh", instance.bh());
      lookupMap.put("bi", instance.bi());
      lookupMap.put("bj", instance.bj());
      lookupMap.put("bm", instance.bm());
      lookupMap.put("bn", instance.bn());
      lookupMap.put("bo", instance.bo());
      lookupMap.put("br", instance.br());
      lookupMap.put("bs", instance.bs());
      lookupMap.put("bt", instance.bt());
      lookupMap.put("bv", instance.bv());
      lookupMap.put("bw", instance.bw());
      lookupMap.put("by", instance.by());
      lookupMap.put("bz", instance.bz());
      lookupMap.put("ca", instance.ca());
      lookupMap.put("cc", instance.cc());
      lookupMap.put("cd", instance.cd());
      lookupMap.put("cf", instance.cf());
      lookupMap.put("cg", instance.cg());
      lookupMap.put("ch", instance.ch());
      lookupMap.put("ci", instance.ci());
      lookupMap.put("ck", instance.ck());
      lookupMap.put("cl", instance.cl());
      lookupMap.put("clear", instance.clear());
      lookupMap.put("cm", instance.cm());
      lookupMap.put("cn", instance.cn());
      lookupMap.put("co", instance.co());
      lookupMap.put("cr", instance.cr());
      lookupMap.put("ct", instance.ct());
      lookupMap.put("cu", instance.cu());
      lookupMap.put("cv", instance.cv());
      lookupMap.put("cx", instance.cx());
      lookupMap.put("cy", instance.cy());
      lookupMap.put("cz", instance.cz());
      lookupMap.put("de", instance.de());
      lookupMap.put("dj", instance.dj());
      lookupMap.put("dk", instance.dk());
      lookupMap.put("dm", instance.dm());
      lookupMap.put("do", instance._do());
      lookupMap.put("dz", instance.dz());
      lookupMap.put("ec", instance.ec());
      lookupMap.put("ee", instance.ee());
      lookupMap.put("eg", instance.eg());
      lookupMap.put("eh", instance.eh());
      lookupMap.put("er", instance.er());
      lookupMap.put("es", instance.es());
      lookupMap.put("et", instance.et());
      lookupMap.put("eu", instance.eu());
      lookupMap.put("fi", instance.fi());
      lookupMap.put("fj", instance.fj());
      lookupMap.put("fk", instance.fk());
      lookupMap.put("fm", instance.fm());
      lookupMap.put("fo", instance.fo());
      lookupMap.put("fr", instance.fr());
      lookupMap.put("ga", instance.ga());
      lookupMap.put("gb", instance.gb());
      lookupMap.put("gd", instance.gd());
      lookupMap.put("ge", instance.ge());
      lookupMap.put("gf", instance.gf());
      lookupMap.put("gh", instance.gh());
      lookupMap.put("gi", instance.gi());
      lookupMap.put("gl", instance.gl());
      lookupMap.put("gm", instance.gm());
      lookupMap.put("gn", instance.gn());
      lookupMap.put("gp", instance.gp());
      lookupMap.put("gq", instance.gq());
      lookupMap.put("gr", instance.gr());
      lookupMap.put("gs", instance.gs());
      lookupMap.put("gt", instance.gt());
      lookupMap.put("gu", instance.gu());
      lookupMap.put("gw", instance.gw());
      lookupMap.put("gy", instance.gy());
      lookupMap.put("hk", instance.hk());
      lookupMap.put("hm", instance.hm());
      lookupMap.put("hn", instance.hn());
      lookupMap.put("hr", instance.hr());
      lookupMap.put("ht", instance.ht());
      lookupMap.put("hu", instance.hu());
      lookupMap.put("id", instance.id());
      lookupMap.put("ie", instance.ie());
      lookupMap.put("il", instance.il());
      lookupMap.put("in", instance.in());
      lookupMap.put("io", instance.io());
      lookupMap.put("iq", instance.iq());
      lookupMap.put("ir", instance.ir());
      lookupMap.put("is", instance.is());
      lookupMap.put("it", instance.it());
      lookupMap.put("jm", instance.jm());
      lookupMap.put("jo", instance.jo());
      lookupMap.put("jp", instance.jp());
      lookupMap.put("ke", instance.ke());
      lookupMap.put("kg", instance.kg());
      lookupMap.put("kh", instance.kh());
      lookupMap.put("ki", instance.ki());
      lookupMap.put("km", instance.km());
      lookupMap.put("kn", instance.kn());
      lookupMap.put("kp", instance.kp());
      lookupMap.put("kr", instance.kr());
      lookupMap.put("kw", instance.kw());
      lookupMap.put("ky", instance.ky());
      lookupMap.put("kz", instance.kz());
      lookupMap.put("la", instance.la());
      lookupMap.put("lb", instance.lb());
      lookupMap.put("lc", instance.lc());
      lookupMap.put("li", instance.li());
      lookupMap.put("lk", instance.lk());
      lookupMap.put("lr", instance.lr());
      lookupMap.put("ls", instance.ls());
      lookupMap.put("lt", instance.lt());
      lookupMap.put("lu", instance.lu());
      lookupMap.put("lv", instance.lv());
      lookupMap.put("ly", instance.ly());
      lookupMap.put("ma", instance.ma());
      lookupMap.put("mc", instance.mc());
      lookupMap.put("md", instance.md());
      lookupMap.put("me", instance.me());
      lookupMap.put("mg", instance.mg());
      lookupMap.put("mh", instance.mh());
      lookupMap.put("mk", instance.mk());
      lookupMap.put("ml", instance.ml());
      lookupMap.put("mm", instance.mm());
      lookupMap.put("mn", instance.mn());
      lookupMap.put("mo", instance.mo());
      lookupMap.put("mp", instance.mp());
      lookupMap.put("mq", instance.mq());
      lookupMap.put("mr", instance.mr());
      lookupMap.put("ms", instance.ms());
      lookupMap.put("mt", instance.mt());
      lookupMap.put("mu", instance.mu());
      lookupMap.put("mv", instance.mv());
      lookupMap.put("mw", instance.mw());
      lookupMap.put("mx", instance.mx());
      lookupMap.put("my", instance.my());
      lookupMap.put("mz", instance.mz());
      lookupMap.put("na", instance.na());
      lookupMap.put("nc", instance.nc());
      lookupMap.put("ne", instance.ne());
      lookupMap.put("nf", instance.nf());
      lookupMap.put("ng", instance.ng());
      lookupMap.put("ni", instance.ni());
      lookupMap.put("nl", instance.nl());
      lookupMap.put("no", instance.no());
      lookupMap.put("np", instance.np());
      lookupMap.put("nr", instance.nr());
      lookupMap.put("nu", instance.nu());
      lookupMap.put("nz", instance.nz());
      lookupMap.put("om", instance.om());
      lookupMap.put("pa", instance.pa());
      lookupMap.put("pe", instance.pe());
      lookupMap.put("pf", instance.pf());
      lookupMap.put("pg", instance.pg());
      lookupMap.put("ph", instance.ph());
      lookupMap.put("pk", instance.pk());
      lookupMap.put("pl", instance.pl());
      lookupMap.put("pm", instance.pm());
      lookupMap.put("pn", instance.pn());
      lookupMap.put("pr", instance.pr());
      lookupMap.put("ps", instance.ps());
      lookupMap.put("pt", instance.pt());
      lookupMap.put("pw", instance.pw());
      lookupMap.put("py", instance.py());
      lookupMap.put("qa", instance.qa());
      lookupMap.put("re", instance.re());
      lookupMap.put("ro", instance.ro());
      lookupMap.put("rs", instance.rs());
      lookupMap.put("ru", instance.ru());
      lookupMap.put("rw", instance.rw());
      lookupMap.put("sa", instance.sa());
      lookupMap.put("sb", instance.sb());
      lookupMap.put("sc", instance.sc());
      lookupMap.put("sd", instance.sd());
      lookupMap.put("se", instance.se());
      lookupMap.put("sg", instance.sg());
      lookupMap.put("sh", instance.sh());
      lookupMap.put("si", instance.si());
      lookupMap.put("sj", instance.sj());
      lookupMap.put("sk", instance.sk());
      lookupMap.put("sl", instance.sl());
      lookupMap.put("sm", instance.sm());
      lookupMap.put("sn", instance.sn());
      lookupMap.put("so", instance.so());
      lookupMap.put("sr", instance.sr());
      lookupMap.put("st", instance.st());
      lookupMap.put("sv", instance.sv());
      lookupMap.put("sy", instance.sy());
      lookupMap.put("sz", instance.sz());
      lookupMap.put("tc", instance.tc());
      lookupMap.put("td", instance.td());
      lookupMap.put("tf", instance.tf());
      lookupMap.put("tg", instance.tg());
      lookupMap.put("th", instance.th());
      lookupMap.put("tj", instance.tj());
      lookupMap.put("tk", instance.tk());
      lookupMap.put("tl", instance.tl());
      lookupMap.put("tm", instance.tm());
      lookupMap.put("tn", instance.tn());
      lookupMap.put("to", instance.to());
      lookupMap.put("tr", instance.tr());
      lookupMap.put("tt", instance.tt());
      lookupMap.put("tv", instance.tv());
      lookupMap.put("tw", instance.tw());
      lookupMap.put("tz", instance.tz());
      lookupMap.put("ua", instance.ua());
      lookupMap.put("ug", instance.ug());
      lookupMap.put("um", instance.um());
      lookupMap.put("us", instance.us());
      lookupMap.put("uy", instance.uy());
      lookupMap.put("uz", instance.uz());
      lookupMap.put("va", instance.va());
      lookupMap.put("vc", instance.vc());
      lookupMap.put("ve", instance.ve());
      lookupMap.put("vg", instance.vg());
      lookupMap.put("vi", instance.vi());
      lookupMap.put("vn", instance.vn());
      lookupMap.put("vu", instance.vu());
      lookupMap.put("wf", instance.wf());
      lookupMap.put("ws", instance.ws());
      lookupMap.put("ye", instance.ye());
      lookupMap.put("yt", instance.yt());
      lookupMap.put("za", instance.za());
      lookupMap.put("zm", instance.zm());
      lookupMap.put("zw", instance.zw());
    }

    public static AbstractImagePrototype getByName(String name) {
      AbstractImagePrototype ret = lookupMap.get(name);
      if (ret == null)
        ret = instance.clear();
      return ret;
    }
  }

}
